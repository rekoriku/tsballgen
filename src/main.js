// Generated by CoffeeScript 2.4.0
(function() {
  "use strict";
  var Animation, Ball, SETTINGS, bal, balls, canvas, ctx, height, random, randomRGB, width;

  canvas = document.querySelector('canvas');

  ctx = canvas.getContext('2d');

  width = canvas.width = window.innerWidth;

  height = canvas.height = window.innerHeight;

  canvas.addEventListener('click', function() {
    return console.log('click');
  });

  random = function(min, max) {
    var num;
    return num = Math.floor(Math.random() * (max - min + 1)) + min;
  };

  randomRGB = function() {
    return `rgb(${random(0, 255)}, ${random(0, 255)}, ${random(0, 255)})`;
  };

  SETTINGS = {
    FPS: 60,
    MINSIZE: 0,
    MAXSIZE: 25,
    BALLS: 5,
    MINSPEED: 10,
    MAXSPEED: 10
  };

  Ball = class Ball {
    constructor(x = 0, y = 0, velX = 0, velY = 0, size1, color) {
      this.x = x;
      this.y = y;
      this.velX = velX;
      this.velY = velY;
      this.size = size1;
      this.color = color;
    }

    draw() {
      ctx.beginPath();
      ctx.fillStyle = this.color;
      ctx.arc(this.x, this.y, this.size, 0, 2 * Math.PI);
      return ctx.fill();
    }

    update() {
      if ((this.x + this.size) >= width) {
        this.velX = -this.velX;
      }
      if ((this.x - this.size) <= 0) {
        this.velX = -this.velX;
      }
      if ((this.y + this.size) >= height) {
        this.velY = -this.velY;
      }
      if ((this.y - this.size) <= 0) {
        this.velY = -this.velY;
      }
      this.x += this.velX;
      return this.y += this.velY;
    }

  };

  balls = [];

  Animation = class Animation {
    constructor() {}

    log() {
      return console.log(this.balls);
    }

    looppi() {
      var ball, i, len, results, size;
      ctx.clearRect(0, 0, width, height);
      ctx.fillStyle = '#fff';
      ctx.fillRect(0, 0, width, height);
      while (balls.length < SETTINGS.BALLS) {
        size = random(10, 20);
        ball = new Ball(random(0, width), random(0, height), random(SETTINGS.MINSPEED, SETTINGS.MAXSPEED), random(SETTINGS.MINSPEED, SETTINGS.MAXSPEED), random(SETTINGS.MINSIZE, SETTINGS.MAXSIZE), randomRGB());
        balls.push(ball);
      }
      results = [];
      for (i = 0, len = balls.length; i < len; i++) {
        ball = balls[i];
        ball.draw();
        results.push(ball.update());
      }
      return results;
    }

    //console.log("hi")

    //setTimeout(@looppi, 1000 / SETTINGS.FPS)
    run() {
      return setTimeout(this.looppi, 1000 / SETTINGS.FPS);
    }

  };

  bal = new Animation();

  //bal.log()
  bal.run();

  //bal.run()
  //bal.looppi()
  //setTimeout(bal.looppi, 1000 / SETTINGS.FPS)
  SETTINGS.FPS = 60;

  SETTINGS.MINSIZE = 15;

  SETTINGS.MAXSIZE = 35;

  SETTINGS.BALLS = 10;

  SETTINGS.MINSPEED = 1;

  SETTINGS.MAXSPEED = 4;

  //pallo.location(25, 5)
//pallo.draw()
//console.log(pallo)

}).call(this);
